#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
#define MAXSIZE 100
int queue[MAXSIZE];
int front=-1,rear=-1;
void enqueue();
void dequeue();
void display();
void getfront();
void getrear();
void main()
{
    int select;
    while(1)
    {
        printf("Select 1 to enter the element in queue \n");
        printf("Select 2 to delete the element from the queue \n");
        printf("Select 3 to view the queue \n");
        printf("Select 4 to get the front element \n");
        printf("Select 5 to get the rear element \n");
        printf("Select 6 to exit \n");
        printf("Select the option \n");
        scanf("%d",&select);
        switch(select)
        {
            case 1:{
                enqueue();
                break;
            }
            case 2:
            {
                dequeue();
                break;
            }
            case 3:
            {
                display();
                break;
            }
            case 4:
            {
                getfront();
                break;
            }
            case 5:
            {
                getrear();
                break;
            }
            case 6:
            {
                exit(0);
            }
            default:{
                printf("Invalid \n");
            }
        }
    }
}
void enqueue()
{
    printf("Enter the value to be inserted \n");
    int data;
    scanf("%d",&data);
    if(rear==MAXSIZE-1)
    {
        printf("Queue is full \n");
    }
    else if(front==-1 && rear==-1)
    {
        front=0;
        rear=0;
    }
    else
    {
        rear++;
    }
    queue[rear]=data;
    printf("Inserted: %d \n",queue[rear]);
}
void dequeue()
{
    int val;
    if(rear==-1 && front==-1)
    {
        printf("Queue is empty \n");
    }
    else if(front==rear)
    {
        val=queue[front];
        front=-1;
        rear=-1;
    }
    else
    {
        val=queue[front];
        front++;
    }
    printf("Deleted : %d \n",val);
}
void display()
{
    for(int i=front;i<=rear;i++)
    {
        printf("%d \n",queue[i]);
        
    }
}
void getfront()
{
    if(rear==-1 && front==-1)
    {
        printf("Queue is empty \n");
    }
    else 
    printf("%d \n", queue[front]);
}
void getrear()
{
    if(rear==-1 && front==-1)
    {
        printf("Queue is empty \n");
    }
    else 
    printf("%d \n", queue[rear]);
}
